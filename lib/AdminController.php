<?phpnamespace plugins\riMeta;use Symfony\Component\HttpFoundation\Request;use plugins\riSimplex\Controller;use plugins\riPlugin\Plugin;use Symfony\Component\HttpFoundation\Response;class AdminController extends Controller{    public function listAction(Request $request){                $metas = Plugin::get('riMeta.Metas')->findByObjectsId($request->get("objects_id"), $request->get('objects_type'));               $this->container->get('templating.holder')->add('main', $this->view->render('riMeta::backend/_list.php', array(            'metas' => $metas->get(),            'all_metas' => Plugin::get('riMeta.Metas')->findAll(),            'objects_id' => $request->get("objects_id"),            'objects_type' =>$request->get('objects_type')        )));        return $this->render('riZCAdmin::backend/layout');    }    public function actionAction(Request $request){        $data['objects_id'] = $request->get("objects_id");        $data['objects_type'] = $request->get("objects_type");        $data['metas_value'] = $request->get("meta_value");        $data['metas_key'] = ($request->get("meta_name") != null) ? $request->get("meta_name") : $request->get("meta_name_dropdown");        switch ($request->get("action")){            case "delete":                if(($meta = Plugin::get('riMeta.Metas')->findById($request->get("metas_id"))) !== false)                $meta->delete();                break;            case "insert":                Plugin::get('riMeta.Metas')->create($data)->save();                break;            case "update":                if(($meta = Plugin::get('riMeta.Metas')->findById($request->get("metas_id"))) !== false)                $meta->setArray($data)->save();                break;        }        $metas = Plugin::get('riMeta.Metas')->findByObjectsId($request->get("objects_id"), $request->get('objects_type'));        return $this->render('riMeta::backend/_list.php', array(            'metas' => $metas->get(),            'all_metas' => Plugin::get('riMeta.Metas')->findAll(),            'objects_id' => $request->get("objects_id"),            'objects_type' => $request->get('objects_type'),            ));    }}